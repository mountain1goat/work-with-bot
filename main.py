import telebot
from telebot import types
import config
import requests
import sqlite3

# business entertainment general health science sports technology

def createSubs (cursor,connect, id_user, id_cat) :
    sql = "INSERT INTO subscriptions (id_user, id_cat) VALUES (:id_user, :id_cat)";
    cursor.execute(sql, {
        'id_user': id_user,
        'id_cat': id_cat}
    )
    connect.commit()

def deleteSubs(cursor, connect, id_user, id_cat):
	sql = "DELETE FROM subscriptions WHERE id_user=:id_user AND id_cat=:id_cat"
	cursor.execute(sql, {
		'id_user': id_user,
		'id_cat': id_cat}
				   )
	connect.commit()

def foundSub (cursor,connect, id_user, id_cat) :
	sql = "SELECT subscriptions.* FROM subscriptions WHERE id_user = :id_user AND id_cat=:id_cat"
	result = cursor.execute(sql, {'id_user': id_user, 'id_cat': id_cat}).fetchone()
	connect.commit()
	return result

def showCats (cursor,connect) :
	result = cursor.execute("SELECT categories.* FROM categories").fetchall()
	connect.commit()
	return result

def showSubs (cursor, connect, id_user) :
	sql = "SELECT subscriptions.id_cat FROM subscriptions WHERE id_user=:id_user"
	result = cursor.execute(sql, {'id_user': id_user}).fetchall()
	connect.commit()
	return result

connect = sqlite3.connect('users.db', check_same_thread=False)
cursor = connect.cursor()

bot = telebot.TeleBot(config.bot_token)


def subs(id_us, id_cat):
	res = foundSub(cursor, connect, id_us, id_cat)
	if res == None:
		createSubs(cursor, connect, id_us, id_cat)
		bot.send_message(id_us, '–í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã!')
	else:
		bot.send_message(id_us, '–í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —ç—Ç—É –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')

def outSubs(id_us, id_cat):
	res = foundSub(cursor, connect, id_us, id_cat)
	if res == None:
		bot.send_message(id_us, '–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —ç—Ç—É –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
	else:
		deleteSubs(cursor, connect, id_us, id_cat)
		bot.send_message(id_us, '–í—ã –æ—Ç–ø–∏—Å–∞–Ω—ã!')


@bot.message_handler(commands=['start'])
def start(message):
	markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
	btn1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
	btn2 = types.KeyboardButton("üì∞ –£–∑–Ω–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏")
	btn3 = types.KeyboardButton("‚öô –§—É–Ω–∫—Ü–∏–∏")
	btn4 = types.KeyboardButton("‚ùì –ß—Ç–æ —è –º–æ–≥—É?")
	markup.add(btn1, btn2, btn3, btn4)
	bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –Ø –±–æ—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–æ–≤–æ—Å—Ç–µ–π".format(message.from_user), reply_markup=markup)

@bot.message_handler(content_types=['text'])
def func(message):
	if (message.text == "üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è"):
		bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ–µ—Ç.. –°–ø–∞—Å–∏–±–æ —á—Ç–æ —á–∏—Ç–∞–µ—à—å –Ω–∞—à–∏ –Ω–æ–≤–æ—Å—Ç–∏!)")
	elif (message.text == "‚öô –§—É–Ω–∫—Ü–∏–∏"):
		markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
		btn1 = types.KeyboardButton("–ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏")
		btn2 = types.KeyboardButton("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è")
		btn3 = types.KeyboardButton("–û—Ç–ø–∏—Å–∞—Ç—å—Å—è")
		back = types.KeyboardButton("–ù–∞–∑–∞–¥")
		markup.add(btn1, btn2, btn3, back)
		bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏ —Ñ—É–Ω–∫—Ü–∏—é ‚Üì", reply_markup=markup)

	elif (message.text == "–ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏"):
		bot.send_message(message.from_user.id, '–í–∞—à–∏ –ø–æ–¥–ø–∏—Å–∫–∏ ‚Üì')
		news = showCats(cursor, connect)
		text = ''
		for i in news:
			if foundSub(cursor, connect, message.from_user.id, i[0]) != None :
				cat = '–Ω–µ—Ç'
				if i[1] == 'business':
					cat = '–ë–∏–∑–Ω–µ—Å'
				elif i[1] == 'entertainment':
					cat = '–î–æ—Å—É–≥'
				elif i[1] == 'general':
					cat = '–û–±—â–∏–µ'
				elif i[1] == 'health':
					cat = '–ó–¥–æ—Ä–æ–≤—å–µ'
				elif i[1] == 'science':
					cat = '–ù–∞—É–∫–∞'
				elif i[1] == 'sports':
					cat = '–°–ø–æ—Ä—Ç'
				elif i[1] == 'technology':
					cat = '–¢–µ—Ö–Ω–∞–ª–æ–≥–∏–∏'

				text += cat + "\n"
				bot.send_message(message.from_user.id, text)
				text = ''

	elif (message.text == "–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è"):
		markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
		btn1 = types.KeyboardButton("–ù–∞ –ë–∏–∑–Ω–µ—Å")
		btn2 = types.KeyboardButton("–ù–∞ –î–æ—Å—É–≥")
		btn3 = types.KeyboardButton("–ù–∞ –û–±—â–∏–µ")
		btn4 = types.KeyboardButton("–ù–∞ –ó–¥–æ—Ä–æ–≤—å–µ")
		btn5 = types.KeyboardButton("–ù–∞ –ù–∞—É–∫–∞")
		btn6 = types.KeyboardButton("–ù–∞ –°–ø–æ—Ä—Ç")
		btn7 = types.KeyboardButton("–ù–∞ –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏")
		back = types.KeyboardButton("–ù–∞–∑–∞–¥")
		markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7, back)
		bot.send_message(message.chat.id, text="–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ ‚Üì", reply_markup=markup)

	elif (message.text == "–û—Ç–ø–∏—Å–∞—Ç—å—Å—è"):
		markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
		btn1 = types.KeyboardButton("–û—Ç –ë–∏–∑–Ω–µ—Å")
		btn2 = types.KeyboardButton("–û—Ç –î–æ—Å—É–≥")
		btn3 = types.KeyboardButton("–û—Ç –û–±—â–∏–µ")
		btn4 = types.KeyboardButton("–û—Ç –ó–¥–æ—Ä–æ–≤—å–µ")
		btn5 = types.KeyboardButton("–û—Ç –ù–∞—É–∫–∞")
		btn6 = types.KeyboardButton("–û—Ç –°–ø–æ—Ä—Ç")
		btn7 = types.KeyboardButton("–û—Ç –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏")
		back = types.KeyboardButton("–ù–∞–∑–∞–¥")
		markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7, back)
		bot.send_message(message.chat.id, text="–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ ‚Üì", reply_markup=markup)

	# –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é
	elif (message.text == "–ù–∞ –ë–∏–∑–Ω–µ—Å"):
		id_us = message.from_user.id
		id_cat = 3
		subs(id_us, id_cat)
	elif (message.text == "–ù–∞ –î–æ—Å—É–≥"):
		id_us = message.from_user.id
		id_cat = 1
		subs(id_us, id_cat)
	elif (message.text == "–ù–∞ –û–±—â–∏–µ"):
		id_us = message.from_user.id
		id_cat = 2
		subs(id_us, id_cat)
	elif (message.text == "–ù–∞ –ó–¥–æ—Ä–æ–≤—å–µ"):
		id_us = message.from_user.id
		id_cat = 4
		subs(id_us, id_cat)
	elif (message.text == "–ù–∞ –ù–∞—É–∫–∞"):
		id_us = message.from_user.id
		id_cat = 5
		subs(id_us, id_cat)
	elif (message.text == "–ù–∞ –°–ø–æ—Ä—Ç"):
		id_us = message.from_user.id
		id_cat = 6
		subs(id_us, id_cat)
	elif (message.text == "–ù–∞ –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏"):
		id_us = message.from_user.id
		id_cat = 7
		subs(id_us, id_cat)
	# –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
	elif (message.text == "–û—Ç –ë–∏–∑–Ω–µ—Å"):
		id_us = message.from_user.id
		id_cat = 3
		outSubs(id_us, id_cat)
	elif (message.text == "–û—Ç –î–æ—Å—É–≥"):
		id_us = message.from_user.id
		id_cat = 1
		outSubs(id_us, id_cat)
	elif (message.text == "–û—Ç –û–±—â–∏–µ"):
		id_us = message.from_user.id
		id_cat = 2
		outSubs(id_us, id_cat)
	elif (message.text == "–û—Ç –ó–¥–æ—Ä–æ–≤—å–µ"):
		id_us = message.from_user.id
		id_cat = 4
		outSubs(id_us, id_cat)
	elif (message.text == "–û—Ç –ù–∞—É–∫–∞"):
		id_us = message.from_user.id
		id_cat = 5
		outSubs(id_us, id_cat)
	elif (message.text == "–û—Ç –°–ø–æ—Ä—Ç"):
		id_us = message.from_user.id
		id_cat = 6
		outSubs(id_us, id_cat)
	elif (message.text == "–û—Ç –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏"):
		id_us = message.from_user.id
		id_cat = 7
		outSubs(id_us, id_cat)

	elif (message.text == "üì∞ –£–∑–Ω–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏"):
		bot.send_message(message.from_user.id, '–ù–æ–≤–æ—Å—Ç–∏ ‚Üì')

		cats = showCats(cursor, connect)
		for k in cats:
			if foundSub(cursor, connect, message.from_user.id, k[0]) != None:
				a = requests.get(f'https://newsapi.org/v2/top-headlines?apiKey={config.ap_key}&country=ru&category={k[1]}&pageSize=1')
				news = []
				for i in a.json()['articles']:
					news.append([i['title'], i['publishedAt'], i['url']])
				text = ''
				for i in news:
					text += i[0] + "\n" + i[1] + "\n" + i[2]
					bot.send_message(message.from_user.id, text)
					text = ''

		bot.send_message(message.from_user.id, '–≤–æ—Ç –∏ –≤—Å–µ –≤—Å–µ –Ω–æ–≤–æ—Å—Ç–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è')

	elif message.text == "‚ùì –ß—Ç–æ —è –º–æ–≥—É?":
		bot.send_message(message.chat.id, text="üëã –ü–æ–∑–¥–∞—Ä–æ–≤–∞—Ç—å—Å—è")
		bot.send_message(message.chat.id, text="üì∞ –£–∑–Ω–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏")
		bot.send_message(message.chat.id, text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π (‚öô –§—É–Ω–∫—Ü–∏–∏)")
		bot.send_message(message.chat.id, text="–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π (‚öô –§—É–Ω–∫—Ü–∏–∏)")
		bot.send_message(message.chat.id, text="–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏ (‚öô –§—É–Ω–∫—Ü–∏–∏)")
		bot.send_message(message.chat.id, text="–ê —á—Ç–æ –µ—â–µ –Ω—É–∂–Ω–æ?üòè")

	elif (message.text == "–ù–∞–∑–∞–¥"):
		markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
		button1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
		button2 = types.KeyboardButton("üì∞ –£–∑–Ω–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏")
		button3 = types.KeyboardButton("‚öô –§—É–Ω–∫—Ü–∏–∏")
		button4 = types.KeyboardButton("‚ùì –ß—Ç–æ —è –º–æ–≥—É?")
		markup.add(button1, button2, button3, button4)
		bot.send_message(message.chat.id, text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup)
	else:
		bot.send_message(message.chat.id, text="–ù–∞ —Ç–∞–∫—É—é –∫–æ–º–º–∞–Ω–¥—É —è –Ω–µ –∑–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω..")


bot.polling()
cursor.close()